# 2.3. Installation Steps {.unnumbered}

## 2.3.1. Initiating Your Raspberry Pi

### Step 1: Installing the Pi Operating System on the SD Card

**1. Download the Pi Imager:** 

To get started, you will need to download the Raspberry Pi Imager to your computer. This software is used to install the operating system on your Pi. You can download it from the [official Raspberry Pi website](https://www.raspberrypi.com/software/) . Choose the version appropriate for your operating system (Windows, macOS, or Ubuntu) and run the installer to set it up on your computer.

**2. Format your SD card:**  After inserting an SD card into your laptop, launch the Raspberry Pi Imager that you just installed. From the utility's main menu, select the `CHOOSE OS` option, and then pick the `Erase` option, followed by `Format SD Card`. This process prepares your SD card for the Pi OS installation.

![Formatting the SD card](https://chat.openai.com/material/ch2/format-SD.mp4) 


**3. Flash the OS onto your SD card:**  Once your SD card is formatted, return to the Raspberry Pi Imager main menu. Select `CHOOSE OS`, then pick the version of the Raspberry Pi OS you want to install. Next, select `CHOOSE SD CARD`, and choose your SD card from the list.

Before you click `WRITE` to initiate the writing process, ensure to enable `ssh` to allow remote access. To do this, create an empty file named `ssh` in the boot partition of the SD card. Also, set the username and password as 'pi' and 'raspberry', respectively, in the settings.

::: {.callout-note}
The default username and password are 'pi' and 'raspberry' respectively for Raspberry Pi OS. However, for security reasons, it's recommended to change these once your system is set up.
:::

![Flashing the OS onto the SD card](https://chat.openai.com/material/ch2/write-SD.mp4) 


Please note that the process of writing the operating system to the SD card might take a while, so please be patient. Once it's done, you'll see a success message, and your SD card is ready to be inserted into the Raspberry Pi.

In the next section, we'll look at setting up your Raspberry Pi with this freshly prepared SD card.

**3. Connecting the Pi to Your Laptop:** Inser

### Step 2: Enabling Internet Connection Sharing

On your laptop, navigate to the network settings and enable the `Internet Connection Sharing` option. This will allow your laptop, once connected to the internet, to share its internet connection with your Raspberry Pi via an Ethernet cable.

![](material/ch2/share-network.mp4)




### Step 3: Connecting the Pi to Your Laptop

Use an Ethernet cable to connect your Pi to your laptop.

![Connect Pi to Laptop](material/ch2/connect-pi.jpg)

### Step 4: Accessing the Pi via SSH

On a Windows 10 or 11 PC, you can leverage PowerShell to SSH into your Raspberry Pi. 

**Prerequisite:** SSH should have been enabled during the Pi OS installation process (refer to Step 1).

1. **Open Command Prompt:** You can access the Command Prompt by pressing `Ctrl + R`, typing `cmd`, and hitting `Enter`. Alternatively, you can open it by pressing `Ctrl + Shift + P`.
   
2. **Access Your Raspberry Pi:** To establish an SSH connection with your Raspberry Pi, enter the following command: `ssh pi@raspberrypi`.

3. **Enter Password:** By default, the username is 'pi' and the password is 'raspberry'. Enter this default password when prompted.


![Access Pi via PuTTY](material/ch2/putty.mp4)

### Step 5: Verifying Your Raspberry Pi's Internet Connectivity

To ensure your Raspberry Pi is connected to the internet, use the ping command followed by the IP address of a well-known site. Ping Google's Public DNS Server by typing `ping 8.8.8.8` and press enter. If the Pi is connected to the internet, you will see lines starting with '64 bytes from 8.8.8.8' and a summary of the ping at the end.

![Verify Pi's Internet Connectivity](material/ch2/pi-ping.mp4)

::: {.callout-note}
If you're connected to a network with enhanced security (like a university network), you may need to register your Raspberry Pi's MAC address on a separate website before you can establish a PuTTY connection. Consult your network administrator or IT support for the specific procedures of your network.
:::

![Register MAC Address](material/ch2/network-unist.png){width=500}

### Step 6: Important Additional Considerations

If you have multiple Raspberry Pi devices connected to your network and wish to SSH into a specific one, you can directly enter its IP address as the hostname in PuTTY. Here's how you can identify the IP address of a particular Raspberry Pi:

1. **Open Command Prompt:** Press the Windows key and type cmd. Press Enter to open the command prompt.
2. **List Network Devices:** Type `arp -a` and press Enter to list all devices connected to your network.
3. **Identify the Pi's IP Address:** Find the IP address of your Raspberry Pi by checking the physical addresses in the list. Raspberry Pi devices have MAC addresses that start with either `B8:27:EB:xx:xx:xx` or `DC:A6:32:xx:xx:xx`.

![Find Raspberry Pi IP Address](material/ch2/find-ip-raspberry.mp4)


## 2.3.2. Setting your Pi as a sensor

### Step 1: Update Your Raspberry Pi OS

The first thing you should do is update your Raspberry Pi's operating system (OS) to the latest version. Open a terminal window and type the following commands:

```bash
sudo apt-get update -y && sudo apt-get upgrade -y
```

After your updates are finished, restart your Raspberry Pi with this command:

```bash
sudo reboot
```

::: {.callout-note}
The `sudo` keyword means superuser do in Linux systems, analogous to Run As Administrator in Windows. The -y flag automatically affirms any prompts during the update process. The apt-get update command refreshes the available packages and their versions, while apt-get upgrade installs the latest versions.
:::

### Step 2: Configure the network settings

This step ensures your Pi can synchronize its system time with the internet at boot. Unlike your laptop, the Raspberry Pi does not have a real-time clock to keep track of the time when it's not powered on (more details [here](https://dayne.broderson.org/2020/03/12/the_time_is_now.html)). This means that your Pi needs to fetch the current time from the internet when it boots.

Here's how to configure the setting:

**1. Setting your mobile's hotspot:** Start by setting up your hotspot, which your Raspberry Pi will use to synchronize its time.  
![](material/ch2/mobile-hotspot.png){width=500}

**2. Edit the Pi's network configuration:** Access the network configuration info by typing this commend:

```bash
sudo nano /etc/wpa_supplicant/wpa_supplicant.conf    
```

**3. Add your hotspot information:** Go to the bottom of the file and add this information below (to me, *juhyeon9087* for both SSID and password of my mobile phone hotspot).

```powershell

country=GB
network={
  ssid="juhyeon9087"
  psk="juhyeon9087"
  key_mgmt=WPA-PSK
}

```

![](material/ch2/network_config.png)

**4. Close the terminal:** After modifying the Wi-Fi connection details, press `Ctrl + X` and then press `Y` followed by `Enter` to save the changes. After rebooting your Raspberry Pi, the changes should take effect.

### Step 3: Turn your Pi into a file server

This process enables the **effortless sharing of files between a Raspberry Pi and other devices,** such as laptops and PCs. Samba, an open-source secure network file sharing system, facilitates this transfer. By activating Samba, files can be easily transferred from or to a laptop within your network to a Raspberry Pi, via a direct Ethernet connection.

**1. Install Samba:** Type the following command in your terminal to install Samba.  

```bash
sudo apt-get install samba samba-common-bin -y
```

**2. Modify the Samba Config File:** Share the folder of your Pi by modifying the Samba config file using the following command:

```bash
sudo nano /etc/samba/smb.conf
```

**3. Edit the File**: Jump to the end of the file by pressing `Ctrl + w` and `Ctrl + v` and type this: 
```powershell
[share]
path = /home/pi
writeable=Yes
create mast=0777
directory mast=0777
public=no
```

![](material/ch2/samba-setting.png)

Save it by pressing `Ctrl + x` then `y` followed by `Enter`.

**4. Set up a Samba User**: Set up a user for our Samba share on your Pi by typing this command:

```bash
sudo smbpasswd -a pi
```

Afterwards, enter the password twice as prompted by the command. My password is `raspberry`.

**5. Restart Samba Services:** Restart the Samba services to make the changes effective.

```bash
sudo service smbd restart
sudo service nmbd restart
```

**6. Access the Pi directory:** Open the File Explorer (press `Win + E`), add the address `raspberrypi/pi` and then, type the Pi's name and password as the network credentials.

![](material/ch2/samba-access.mp4)

**7. Create and check the test file test file:** Make a text file on directory of your Pi by typing the following command.

```bash
sudo nano test.txt
```

After typing anything (e.g., 'gg') in the file press `Ctrl + x` then `y` followed by `Enter`. Then, you can see the file in your laptop.

![](material/ch2/samba_check.mp4)

### Step 4: Configure Cloud Storage Access on Your Pi

This step will guide you on how to equip your Raspberry Pi to send data to your cloud storage. This functionality can prove beneficial in scenarios where you need to verify the files transmitted by your Pi during its setup process.

For instance, when installing a sensor, determining the remaining storage on the sensor's SD card can be a challenge. To address this, you can create a file that includes details about the available storage space and configure your Pi to transmit this file to your cloud storage upon booting. This way, you can inspect this file on your mobile device during the installation phase.

**1. Create a Dropbox App:**  We'll utilize Dropbox as our cloud storage service provider. Create your app on [Dropbox developers](https://www.dropbox.com/developers/) .

![](material/ch2/dropbox_create1.png) 


![](material/ch2/dropbox_create2.png) 


**2. Change the Permission:**  Alter the setting to allow your app to view and manage files and folders. I've selected all options in the permission settings.

![](material/ch2/dropbox_permission.png) 


**3. Install Necessary Packages:**  Ensure that the `curl` and `git` packages are installed by typing the following command:

```bash
sudo apt install curl git
```

**4. Install the Dropbox Uploader:**  Clone the [Dropbox Uploader](https://github.com/andreafabrizi/Dropbox-Uploader/)  script on your Pi by typing the following command.

```bash
git clone https://github.com/andreafabrizi/Dropbox-Uploader.git
```

**5. Execute the Uploader Script:**  Navigate to the newly cloned folder and grant the script executable permission by typing the following command.

```bash
cd Dropbox-Uploader
```

```command
sudo chmod +x dropbox_uploader.sh
```

::: {.callout-note}
You can learn basic Linux commands on sites like [this](https://www.hostinger.com/tutorials/linux-commands) .
:::

**6. Link Your Account to the Uploader:**  Copy and paste your App Key and App Secret into the terminal.

![](material/ch2/dropbox_register1.png) 


**7. Grant Your App Permissions on the Pi:**  Copy and paste the URL into the web browser. Click 'Continue' to grant the permissions.

![](material/ch2/dropbox_register2.png) 


**8. Test the Dropbox Uploader App:**  Use the `upload` function to send a 'README.md' file to your Dropbox cloud storage. Before executing the following command, the file was empty, but after the command, the file was sent.

```bash
./dropbox_uploader.sh upload README.md /
```

![](material/ch2/dropbox_check.mp4) 


## 2.3.3. Test your Pi

### Step 1: Test WiFi adapter

This can be used to test a monitor mode on the WiFi adapter, allowing collecting WiFi packets.

**1. Install aircrack pcakage:** Download the package by typing this commend:

```bash
sudo apt-get install -y aircrack-ng
```

**2. Check the status of wireless interface:** Get the list of wireless interface in your Pi by typing this commend:

```bash
airmon-ng
```

Before inserting the WiFi adaopter, only internal wireless interface on your Pi is found.

![](material/ch2/aircrack-before.png) 

With your WiFi adatoper, addtional wireelss interface you can see that.

![](material/ch2/aircrack-connected.jpg)

![](material/ch2/aircrack-after.png) 

**3. Change the monitor mode:** Change the adapter mode to monitor mode by following this command:

```bash
airmon-ng start wlan1
```

**4. Excuete monitor mode:** Collect the WiFi packets by following this command:

```bash
airodump-ng wlan1mon
```

![](material/ch2/aircrack-test.mp4) 





