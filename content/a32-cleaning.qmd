# Data Cleaning

In this section, we will first examine the raw WiFi data stored in an SQLite3 database and then demonstrate how to load this data into R for further processing.

## Setup

### Loading Packages
Before we start, let's ensure that we have all the necessary packages installed and loaded. We will use the `pacman` package to manage our package dependencies.

```{r, warning = FALSE}
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, data.table, knitr)
```

We will use the fread function from the data.table package to efficiently read in the CSV file containing our raw WiFi data.

### Loading the Data

We will use the `fread` function from the data.table package to efficiently read in the CSV file containing our raw WiFi data.

```{r}
dt_1a <- fread("material/ch3/sample.csv")
```

### Setting the Datetime Range

To focus on a specific time period for our analysis, we will define a start and end date using the `ymd_hms` function from the `lubridate` package (part of the `tidyverse`).

Set the start and end time.

```{r}
start_date <- ymd_hms("2024-04-09 19:18:00")
end_date <- ymd_hms("2024-04-09 19:24:00")
```

Next, we will parse the timestamp column in our data to convert it to a proper datetime format and filter the data to include only rows within our specified datetime range.

```{r}
dt_1b <- dt_1a %>%
  mutate(timestamp = parse_date_time(timestamp, "%Y-%m-%d %H:%M:%S", tz = "UTC")) %>% filter(between(timestamp, start_date, end_date))
```

### Filtering by Subtype
In WiFi data analysis, certain subtypes of packets may not be relevant for our purposes. In this example, we will remove rows where the `subtype` column contains the word "response".

```{r}
dt_1c <- dt_1b %>%
  filter(!grepl("response", subtype))
```

::: {.callout-note collapse="true"}
## Why We Should Remove "Response" Packets
We remove "response" packets because they are sent from APs to devices, not from devices to APs. In the raw WiFi data collected over a month on a university campus (see the table below), "response" packets account for a large proportion (35.3% for "probe-response"). By filtering them out, we focus on the more relevant packets originating from devices, which provide information about the presence and movement of pedestrians.

| Type       | Subtype             | Raw WiFi data Count | Raw WiFi data Proportion |
|------------|---------------------|---------------------|--------------------------|
| Management | probe-request       | 714,353             | 2.6%                     |
| Management | probe-response      | 9,532,383           | 35.3%                    |
| Management | authentication      | 352,856             | 1.3%                     |
| Management | deauthentication    | 30,765              | 0.1%                     |
| Management | association-request | 16,043              | 0.1%                     |
| Management | association-response| 13,621              | 0.1%                     |
| Management | reassociation-request | 44,284            | 0.2%                     |
| Management | reassociation-response| 33,429           | 0.1%                     |
| Management | disassociation      | 24,525              | 0.1%                     |
| Management | action              | 351,477             | 1.3%                     |
| Data       | data                | 18,546              | 0.1%                     |
| Data       | null                | 8,716,923           | 32.3%                    |
| Data       | qos-data            | 4,875,257           | 18.1%                    |
| Data       | qos-null            | 2,253,010           | 8.4%                     |


:::

### Filtering by Signal Strength

The signal strength (RSSI) of WiFi packets can provide valuable information about the proximity and location of devices. However, extremely high or low values may not be useful for analysis. We will filter our data to include only rows where the `strength` column falls between -30 and -80.

```{r}
dt_1d <- dt_1c %>%
  filter(between(strength, -30, -80))
```

::: {.callout-note collapse="true"}
## Why We Should Filter Signal Strength
We filter the signal strength to remove extreme values. Very strong signals (above -30 dBm) may come from devices very close to the sensor, like a tablet right next to it, which may not represent typical pedestrian behavior. Very weak signals (below -80 dBm) may be less reliable, coming from far away or obstructed devices. Focusing on the -30 to -80 dBm range helps capture data more likely to represent pedestrians moving within a reasonable distance from the sensors.
:::

### Required R Packages


## Data Structure


## Overview of Filtering Techniques

The three filtering techniques used for WiFi data preprocessing are:

**1. Removal of random MAC addresses:** Eliminates random MAC addresses to avoid duplicate counting.

**2. Removal of non-mobile devices:** Removes detection records of static devices to focus on mobility.

**3. Removal of rarely detected devices:** Excludes MAC addresses that are detected for very short duration.

![](material/ch3/preprocessing.png)

## Raw Data Structure

The raw data is typically stored in a structured format, such as a database or a comma-separated values (CSV) file. For this example, let's assume the data is stored in an SQLite3 database. The database may contain one or more tables that capture the WiFi sensing data.




Each row in the dataset represents a captured WiFi packet, and the columns provide various attributes of the packet:

- Timestamp: The timestamp indicates when the packet was captured, allowing for temporal analysis.
- Type and Subtype: These columns specify the type and subtype of the captured packet. In this example, the packets are management frames with a subtype of probe-request, indicating that devices are searching for nearby APs.
- Strength: The signal strength of the received packet is recorded in dBm units, providing information about the proximity of the device to the sensor.
- Source Address: The source address is the hashed MAC address of the device sending the packet, enabling device identification while preserving privacy.
- Source Randomized: This column indicates whether the source address is randomized (1) or not (0).
- Destination Address: The destination address is the hashed MAC address of the intended recipient of the packet.
- Destination Randomized: This column indicates whether the destination address is randomized (1) or not (0).
- Access Point Name: The name of the access point (AP) that the device is trying to discover.
- Access Point Address: The hashed MAC address of the AP.
- Access Point Randomized: This column indicates whether the AP address is randomized (1) or not (0).
- Sequence Number: The sequence number of the packet, used for ordering and identifying packets within a sequence.
- Channel: The WiFi channel on which the packet was transmitted.
- Sensor Name: The name of the sensor that captured the packet.
