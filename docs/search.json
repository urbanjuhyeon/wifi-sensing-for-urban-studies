[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Comprehensive Toolkit for WiFi Sensing: Decoding urban spaces",
    "section": "",
    "text": "Preface\nThis book is a dedicated resource for anyone interested in leveraging affordable, commercially available sensors to measure non-motorized traffic in urban environments.\nQuantifying non-motorized traffic—such as pedestrians and cyclists—plays a crucial role in urban studies. Understanding the flow and patterns of non-motorized traffic can inform urban planning strategies, enhance public safety, and contribute to the development of sustainable cities. Moreover, sensing technologies provide a robust and non-invasive method for capturing this vital information in real time, offering insights that traditional surveys or manual counts might miss.\nThe advent of the Internet-of-Things (IoT) has spurred a wave of urban sensing projects worldwide. Examples include the Array of Things (AoT) in Chicago, USA and S-DoT in Seoul, Korea, which utilize a network of sensors to gather a wide range of data.\nWith the increasing accessibility of DIY technologies, individuals now have the opportunity to engage with their urban environment in new and innovative ways. These tools democratize the field of urban sensing, previously the domain of expert scientists, by equipping anyone with the interest to build their own sensors.\nThis book is designed for those interested in understanding and monitoring non-motorized traffic. We provide comprehensive guidance on building your own urban DIY sensors for this purpose. With hands-on advice, practical examples, and detailed breakthroughs, our aim is to empower you with the skills and knowledge necessary to contribute to the rapidly evolving field of urban sensing."
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "A Comprehensive Toolkit for WiFi Sensing: Decoding urban spaces",
    "section": "",
    "text": "Duives, D. C., van Oijen, T., & Hoogendoorn, S. P. (2020). Enhancing Crowd Monitoring System Functionality through Data Fusion: Estimating Flow Rate from Wi-Fi Traces and Automated Counting System Data. Sensors (Basel), 20(21). https://doi.org/10.3390/s20216032↩︎\nSoundararaj, B., Cheshire, J., & Longley, P. (2019). Estimating real-time high-street footfall from Wi-Fi probe requests. International Journal of Geographical Information Science, 34(2), 325-343,. https://doi.org/10.1080/13658816.2019.1587616↩︎\nZhou, Y., Lau, B. P. L., Koh, Z., Yuen, C., & Ng, B. K. K. (2020). Understanding Crowd Behaviors in a Social Event by Passive WiFi Sensing and Data Mining. IEEE internet of things journal, 1-1,. https://doi.org/10.1109/jiot.2020.2972062↩︎"
  },
  {
    "objectID": "content/a21-requirement.html#hardware-requirements",
    "href": "content/a21-requirement.html#hardware-requirements",
    "title": "2.1. Requirements",
    "section": "2.1.1. Hardware Requirements",
    "text": "2.1.1. Hardware Requirements\nThis is the hardware setup illustrating the necessary components required for Wi-Fi sensing:\n\nTo build up this WiFi sensor, you’ll need the following hardware:\n\n\n\nItem\nFunction\nRequirement\n\n\n\n\nLaptop and LAN cable\nAccessing and controlling the sensor\n\n\n\nRaspberry Pi board\nBuilding the sensor\nPi 3B/3B+ or a higher model Pi\n\n\nWiFi adapter\nCapturing WiFi packets\nCheck chipset compatibility for ‘monitoring mode’ (here)\n\n\nMicro SD card and adapter\nBuilding and storing data\nAt least 16 GB size\n\n\nEthernet cable\nConnecting the Pi to your laptop\n\n\n\nPortable power bank\nPowering the sensor in outdoor environments\nBattery capacity: +20,000 mAh (lasts one day in our setting)\n\n\nPi camera\nRecording the scene in front of the sensor"
  },
  {
    "objectID": "content/a21-requirement.html#software",
    "href": "content/a21-requirement.html#software",
    "title": "2.1. Requirements",
    "section": "2.1.2. Software",
    "text": "2.1.2. Software\nThis is a list of the main programs needed to build a Wi-Fi sensor and handle the sensor data. I will also provide the download link for each step later.\n\n\n\nItem\nFunction\nLink\n\n\n\n\nPuTTY\nTo access the Raspberry Pi remotely\nhere\n\n\nSQLite\nDatabase program to store sensor data\nhere\n\n\nRaspberry Pi Imager\nTool to write Raspberry Pi OS images onto SD cards\nhere"
  },
  {
    "objectID": "content/a21-requirement.html#skill-required",
    "href": "content/a21-requirement.html#skill-required",
    "title": "2.1. Requirements",
    "section": "2.1.3. Skill required",
    "text": "2.1.3. Skill required\nYou should have a basic understanding of programming, specifically in R and Python. You should be able to write, edit, and debug code. If you need to brush up on these skills or are just starting out, I recommend the following courses: Data Science: Foundations using R Specialization:\n\nData Science: Foundations using R Specialization: This course will help you build a strong foundation in data science using R.\nPython for Everybody Specialization: This course is a great introduction to programming in Python and covers the basics you’ll need for this project."
  },
  {
    "objectID": "content/a22-placement.html",
    "href": "content/a22-placement.html",
    "title": "Placement and Coverage Considerations",
    "section": "",
    "text": "Item\nFunction\nRequirement\n\n\n\n\nLaptop and LAN cable\nAccessing and controlling the sensor\n\n\n\nRaspberry Pi board\nBuilding the sensor\nPi 3B/3B+ or a higher model Pi\n\n\nWiFi adapter\nCapturing WiFi packets\nCheck chipset compatibility for ‘monitoring mode’ (here)\n\n\nMicro SD card and adapter\nBuilding and storing data\nAt least 16 GB size\n\n\nEthernet cable\nConnecting the Pi to your laptop\n\n\n\nPortable power bank\nPowering the sensor in outdoor environments\nBattery capacity: +20,000 mAh (lasts one day in our setting)\n\n\nPi camera\nRecording the scene in front of the sensor\n\n\n\n\n\nSoftware\n\n\n\nItem\nFunction\nLink\n\n\n\n\nPuTTY\nTo access the Pi by your laptop\nhere\n\n\nRaspberry Pi Imager\nTo build Raspberry Pi OS\nhere\n\n\nRaspberry Pi Imager\nTo build Raspberry Pi OS\nhere\n\n\n\n\n\nSkill\nLearning R and Python will be necessary for sensor building and data analysis. I recommend these classes: Data Science: Foundations using R Specialization and Python for Everybody Specialization"
  },
  {
    "objectID": "content/a23-installation.html#getting-started-with-pi",
    "href": "content/a23-installation.html#getting-started-with-pi",
    "title": "2.3. Installation steps",
    "section": "2.3.1. Getting started with Pi",
    "text": "2.3.1. Getting started with Pi\n\nStep 1: Install the Raspberry Pi’s OS on your SD card\nInsert your SD card into your laptop and launch the Raspberry Pi Imager and select the format option to prepare your SD card before the installation.\nVideo\n\n\n\nStep 2: Flash the Raspberry Pi OS onto your SD card.\nBefore initiating the writing process, make sure to enable ssh and set the username and password to ‘pi’ and ‘raspberry’ respectively in the settings.\n\n\n\n\n\n\nNote\n\n\n\nThe default username and password are ‘pi’ and ‘raspberry’ respectively for Raspberry Pi OS, but it’s always recommended to change these for security reasons once your system is set up.\n\n\n\n\n\nStep 3: Activate the Internet Connection Sharing Option\nOn your laptop, navigate to the network settings and enable the internet connection sharing option. This action will allow your laptop, once connected to the internet, to share its internet connection with your Raspberry Pi via an Ethernet cable\n\n\n\nStep 4: Connect the Pi and your laptop\nUse an Ethernet cable to connect your Pi to your laptop\n\nStep 5: Use PuTTY opeen putty remotely access the Pi using SSH (Secure Shell), a protocol available on Linux systems that allows you to execute commands on the Pi from your local computer. This method enables you to access the Pi over an Ethernet cable, eliminating the need for a mouse and monitor. SSH should be enabled during the Raspberry Pi OS installation process (refer to Step 2)."
  }
]