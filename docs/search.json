[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sensing Urban Dynamics with WiFi: A Practical Guide",
    "section": "",
    "text": "Preface\nThis book is a dedicated resource for anyone interested in leveraging affordable, commercially available sensors to measure non-motorized traffic in urban environments.\nQuantifying non-motorized traffic—such as pedestrians and cyclists—plays a crucial role in urban studies. Understanding the flow and patterns of non-motorized traffic can inform urban planning strategies, enhance public safety, and contribute to the development of sustainable cities. Moreover, sensing technologies provide a robust and non-invasive method for capturing this vital information in real time, offering insights that traditional surveys or manual counts might miss.\nThe advent of the Internet-of-Things (IoT) has spurred a wave of urban sensing projects worldwide. Examples include the Array of Things (AoT) in Chicago, USA and S-DoT in Seoul, Korea, which utilize a network of sensors to gather a wide range of data.\nWith the increasing accessibility of DIY technologies, individuals now have the opportunity to engage with their urban environment in new and innovative ways. These tools democratize the field of urban sensing, previously the domain of expert scientists, by equipping anyone with the interest to build their own sensors.\nThis book is designed for those interested in understanding and monitoring non-motorized traffic. We provide comprehensive guidance on building your own urban DIY sensors for this purpose. With hands-on advice, practical examples, and detailed breakthroughs, our aim is to empower you with the skills and knowledge necessary to contribute to the rapidly evolving field of urban sensing."
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Sensing Urban Dynamics with WiFi: A Practical Guide",
    "section": "",
    "text": "Duives, D. C., van Oijen, T., & Hoogendoorn, S. P. (2020). Enhancing Crowd Monitoring System Functionality through Data Fusion: Estimating Flow Rate from Wi-Fi Traces and Automated Counting System Data. Sensors (Basel), 20(21). https://doi.org/10.3390/s20216032↩︎\nSoundararaj, B., Cheshire, J., & Longley, P. (2019). Estimating real-time high-street footfall from Wi-Fi probe requests. International Journal of Geographical Information Science, 34(2), 325-343,. https://doi.org/10.1080/13658816.2019.1587616↩︎\nZhou, Y., Lau, B. P. L., Koh, Z., Yuen, C., & Ng, B. K. K. (2020). Understanding Crowd Behaviors in a Social Event by Passive WiFi Sensing and Data Mining. IEEE internet of things journal, 1-1,. https://doi.org/10.1109/jiot.2020.2972062↩︎"
  },
  {
    "objectID": "content/a31-overview.html",
    "href": "content/a31-overview.html",
    "title": "6  Metrics Overview",
    "section": "",
    "text": "We explore how WiFi gives us a snapshot of life in the city. It’s about finding where people are (Location), tallying up the numbers (Count), tracking movement (Track), identifying patterns (Identify), and figuring out actions (Activities). A graphic will illustrate these concepts step by step:\n\n\n\nOverview of WiFi Sensing Metrics: From Pinpointing Locations to Understanding Urban Activities\n\n\n\nGround Truth: What’s really happening?\nWe start with the ‘Ground Truth’—observing what’s actually happening on the ground. This real-life observation helps us check and confirm our WiFi data findings. It’s the benchmark against which we measure the accuracy of our WiFi sensing data.\n\n\nLocation: Where are people at a specific time?\n‘Location’ is determined by analyzing the characteristics of WiFi signals at a given time, like signal frequency and strength. Depending on the situation, we might assign locations based on sensor positions or estimate them in areas between sensors.\n\n\n\n\n\n\nWhy Location Comes Before Count\n\n\n\n\n\nBefore counting, we must pinpoint location. Without knowing where devices are, we just have a total count.\nImagine a room with three people, just like in the diagram above:\n\nWithout location data, counting detected device MAC addresses only tells you there are three devices total.\nWith even rough location data, you can determine that two devices are on the left and one on the right – providing much richer information.\n\n\n\n\n\n\nCount: How many over time?\n‘Count’ focuses on tallying unique MAC addresses to estimate how many people are in an area over different timescales. This method allows for long-term tracking of device presence, offering insights into occupancy trends over extended periods.\n\n\nTrack: Where and when did they move?\n‘Track’ involves recording when and where phones are detected. This data lets us follow people’s movements, highlighting the dynamic patterns of city life and offering insights into how different areas are used throughout the day.\n\n\nIdentify: Who visits regularly and what are their patterns?\nWith ‘Identify’, we analyze data over time to recognize regular visitors and understand their movement habits. This metric provides insights into recurring traffic patterns and the behaviors of different user groups within the city.\n\n\nActivities: What are they doing and how does it change?\n‘Activities’ aims to understand actions by analyzing timing and movement data. We look at how people use different city areas, observing changes in activity patterns at different times and days, to get a deeper understanding of urban life."
  },
  {
    "objectID": "content/a32-location.html",
    "href": "content/a32-location.html",
    "title": "7  Location",
    "section": "",
    "text": "In this section, we focus on understanding how we can figure out where people are in a city using WiFi sensing. Finding the exact location of people based on WiFi signals is not always straightforward. There are two main challenges: picking the right amount of time to look at WiFi signals and choosing the best way to guess where these signals come from. This section explains these challenges and how we can overcome them. We will also look at the effective methods I proposed in my thesis for finding locations and how to put these ideas into practice using R code."
  },
  {
    "objectID": "content/a31-collection.html#understanding-wifi-sensing-types",
    "href": "content/a31-collection.html#understanding-wifi-sensing-types",
    "title": "6  Data Collection Insights",
    "section": "6.1 Understanding WiFi Sensing Types",
    "text": "6.1 Understanding WiFi Sensing Types\nWiFi, a technology for wireless networking based on IEEE 802.11 standards, can be used to measure people’s location and behavior through two main approaches: passive and active WiFi sensing.\n\nPassive WiFi sensing is a receive-only system that captures WiFi packets emitted from WiFi-enabled devices carried by individuals. It focuses on answering “Where is the station and its holder?” without requiring active participation from the person. Sensors (sniffers) or access points (APs) detect WiFi packets sent from nearby devices, which regularly emit WiFi packets to discover nearby APs, even when not connected (Bonné et al., 2013; Musa & Eriksson, 2012). The typical detection range is approximately 100 meters, considering commercial sensor specifications and WiFi device transmission range (Chilipirea, 2019).\nOn the other hand, active WiFi sensing is a geolocation system that uses WiFi packets from nearby APs to determine the location of a device. It focuses on answering “Where am I?” from the device’s perspective. The device scans for nearby WiFi APs and saves received packets, which are then sent to a server for location estimation and transmitted back to the device. Active sensing requires user consent and active participation, such as installing an application to collect and send WiFi logs.\n\nPassive Sensing for Pedestrian Behavior Monitoring\nThis book focuses on passive WiFi sensing for studying pedestrian behavior in urban environments. As illustrated in Figure 6-1, passive sensing aims to answer the question “Where is the station and its holder?” without requiring active participation from individuals. This approach is particularly suitable for urban planning and research, where it is impractical to ask for consent from the numerous pedestrians using public spaces.\nPassive sensing offers a non-intrusive and scalable method for gathering data on pedestrian behavior by capturing the WiFi packets emitted by devices carried by pedestrians. This data provides valuable insights into pedestrian movement patterns, space utilization, and social interactions in urban environments, enabling better planning, design, and management of public spaces. In contrast, active sensing focuses on answering “Where am I?” from the device’s perspective, which requires user consent and active participation. While active sensing allows for richer data on people’s mobility, it is less practical for large-scale pedestrian behavior monitoring in urban environments.\nHowever, it is essential to consider the limitations, privacy concerns, and ethical implications of passive WiFi sensing. While individuals are not actively providing information, the collection of WiFi packets from their devices may still raise privacy concerns. Researchers should ensure that the data collection process is transparent, secure, and complies with relevant privacy regulations."
  },
  {
    "objectID": "content/a31-collection.html#sensor-installation-strategies",
    "href": "content/a31-collection.html#sensor-installation-strategies",
    "title": "6  Data Collection Insights",
    "section": "6.2 Sensor Installation Strategies",
    "text": "6.2 Sensor Installation Strategies\nOne of the most convenient and discreet ways to install WiFi sensors outdoors is by attaching them to existing street furniture, such as trees or lampposts. Make sure to use waterproof enclosures and secure the sensors firmly to minimize the risk of damage from weather conditions or tampering. This approach allows you to leverage existing infrastructure in the urban environment while keeping the sensors out of sight. Figure 6-2 shows an example of a sensor attached to a lamppost."
  },
  {
    "objectID": "content/a31-collection.html#sensor-placement-strategies",
    "href": "content/a31-collection.html#sensor-placement-strategies",
    "title": "6  Data Collection Insights",
    "section": "6.3 Sensor Placement Strategies",
    "text": "6.3 Sensor Placement Strategies\nTo optimize coverage and minimize signal interference, consider the following strategies when deciding where to place your WiFi sensors:\n\nSingle street coverage: If your target area is a single street, place sensors at both ends and a few in the middle to ensure adequate coverage along the entire length of the street.\nDistrict-wide coverage: When monitoring a larger area such as a district, position sensors at intersections to maximize coverage and capture pedestrian movement patterns between different streets and areas.\nAvoiding interference: Steer clear of areas with high levels of electromagnetic interference, such as electrical equipment or large metal structures, to maintain signal quality and reliability.\nIndoor considerations: When installing sensors indoors, account for signal attenuation caused by walls and other obstacles, as this can affect the range and accuracy of the sensors.\nOutdoor protection: In outdoor environments, minimize the impact of weather conditions by shielding sensors from direct exposure to rain, snow, or extreme temperatures.\nAccessibility and security: Place sensors in locations that are easily accessible for maintenance and troubleshooting, while also ensuring the security of the sensors to prevent tampering or damage."
  },
  {
    "objectID": "content/a31-collection.html#optimizing-sensor-density-for-accuracy",
    "href": "content/a31-collection.html#optimizing-sensor-density-for-accuracy",
    "title": "6  Data Collection Insights",
    "section": "6.4 Optimizing Sensor Density for Accuracy",
    "text": "6.4 Optimizing Sensor Density for Accuracy\nThe number and density of sensors play a crucial role in determining the accuracy and reliability of the WiFi sensing system. While a higher number of sensors generally leads to improved accuracy, it is essential to strike a balance between performance and practical considerations, such as cost and maintenance.\nAs a general guideline for outdoor deployments, aim to install sensors at intervals of approximately 100 meters. This means placing one sensor for every 100 meters of the target area. While more sensors can enhance accuracy, this spacing has been found to provide a good balance between performance and resource efficiency based on experimental results.\n\n\nDetailed Experiment on Sensor Density (click to expand)\n\nA study conducted in the central street of the University of Ulsan retail district tested the effects of sensor density on localization performance and the number of detected samples. The study created scenarios with varying sensor densities (Table 6-1) and found that lower sensor density led to poorer localization performance (Figure 6-3) and a decreased percentage of detected samples (Figure 6-4).\nTable 6-1. Description of scenarios based on sensor locations and counts\nScenario Number of locations Number of sensors Average distance Description Baseline 7 8 53.6m Default experiment setting Scenario 1 4 5 107m Removes 3 locations Scenario 2 3 3 161m Removes 1 location Scenario 3 2 2 322m Removes 1 location Figure 6-3. Localization performance by scenario (30 seconds sampling time) Figure 6-4. Localization error and number of samples used by scenario when localized to 30 seconds of sampling\n\nBy following these sensor installation tips and strategies, even those new to WiFi sensing can effectively deploy sensors for pedestrian behavior monitoring, ensuring high-quality data collection and accurate localization performance. Remember, the key is to find the right balance between sensor density, placement, and practical considerations to create a reliable and efficient WiFi sensing system."
  },
  {
    "objectID": "content/a32-extraction.html#data-structure",
    "href": "content/a32-extraction.html#data-structure",
    "title": "7  Data Structure and Loading",
    "section": "7.1 Data Structure",
    "text": "7.1 Data Structure"
  },
  {
    "objectID": "content/a32-extraction.html#overview-of-filtering-techniques",
    "href": "content/a32-extraction.html#overview-of-filtering-techniques",
    "title": "7  Data Structure and Loading",
    "section": "7.2 Overview of Filtering Techniques",
    "text": "7.2 Overview of Filtering Techniques\nThe three filtering techniques used for WiFi data preprocessing are:\n1. Removal of random MAC addresses: Eliminates random MAC addresses to avoid duplicate counting.\n2. Removal of non-mobile devices: Removes detection records of static devices to focus on mobility.\n3. Removal of rarely detected devices: Excludes MAC addresses that are detected for very short duration."
  },
  {
    "objectID": "content/a32-extraction.html#raw-data-structure",
    "href": "content/a32-extraction.html#raw-data-structure",
    "title": "7  Data Structure and Loading",
    "section": "7.3 Raw Data Structure",
    "text": "7.3 Raw Data Structure\nThe raw data is typically stored in a structured format, such as a database or a comma-separated values (CSV) file. For this example, let’s assume the data is stored in an SQLite3 database. The database may contain one or more tables that capture the WiFi sensing data.\nEach row in the dataset represents a captured WiFi packet, and the columns provide various attributes of the packet:\n\nTimestamp: The timestamp indicates when the packet was captured, allowing for temporal analysis.\nType and Subtype: These columns specify the type and subtype of the captured packet. In this example, the packets are management frames with a subtype of probe-request, indicating that devices are searching for nearby APs.\nStrength: The signal strength of the received packet is recorded in dBm units, providing information about the proximity of the device to the sensor.\nSource Address: The source address is the hashed MAC address of the device sending the packet, enabling device identification while preserving privacy.\nSource Randomized: This column indicates whether the source address is randomized (1) or not (0).\nDestination Address: The destination address is the hashed MAC address of the intended recipient of the packet.\nDestination Randomized: This column indicates whether the destination address is randomized (1) or not (0).\nAccess Point Name: The name of the access point (AP) that the device is trying to discover.\nAccess Point Address: The hashed MAC address of the AP.\nAccess Point Randomized: This column indicates whether the AP address is randomized (1) or not (0).\nSequence Number: The sequence number of the packet, used for ordering and identifying packets within a sequence.\nChannel: The WiFi channel on which the packet was transmitted.\nSensor Name: The name of the sensor that captured the packet."
  },
  {
    "objectID": "content/a33-preprocessing.html#loading-wifi-data-with-r",
    "href": "content/a33-preprocessing.html#loading-wifi-data-with-r",
    "title": "8  Preprocessing Techniques",
    "section": "8.1 Loading WiFi Data with R",
    "text": "8.1 Loading WiFi Data with R\nWe need to load the raw WiFi data from the SQLite3 database into R using the RSQLite and DBI packages.\nFor a more streamlined and efficient process, we’ll utilize the pacman package, which offers the p_load function. This function automatically installs and loads the necessary packages if they are not already installed.\nFirst, ensure the pacman package is installed and loaded:\n\nif (!require(pacman)) install.packages(\"pacman\")\n\n필요한 패키지를 로딩중입니다: pacman\n\npacman::p_load(pacman)\n\nNext, use p_load from pacman to install and load the RSQLite and DBI packages, essential for interfacing with SQLite databases:\n\npacman::p_load(RSQLite, DBI, data.table, knitr)\n\nNext, establish a connection to your SQLite3 database using the dbConnect() function:\n\nconn &lt;- dbConnect(SQLite(), \"path/to/your/database.sqlite\")\n\nReplace \"path/to/your/database.sqlite\" with the actual path to your SQLite3 database file.\n\n\n\n\n\n\nIf you don’t have the WiFi DB\n\n\n\nDownload this\n\n\nTo load the WiFi data from the “packets” table, use the dbGetQuery() function:\n\nwifi_data &lt;- dbGetQuery(conn, \"SELECT * FROM packets\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntimestamp\ntype\nsubtype\nstrength\nsource_address\nsource_address_randomized\ndestination_address\ndestination_address_randomized\naccess_point_name\naccess_point_address\naccess_point_address_randomized\nsequence_number\nchannel\nsensor_name\ninfo\n\n\n\n\n2024-04-09T19:17:27.536121\nmanagement\nprobe-response\n-65\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n767dcce0bef280209ebb9401ddd0694ebd4ca7c7703e3c0269cb86d6592e0012\n1\nSK_WiFiGIGA8161_2.4G\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n604\n6\nA01\n\n\n\n2024-04-09T19:17:27.541249\nmanagement\nprobe-response\n-67\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n767dcce0bef280209ebb9401ddd0694ebd4ca7c7703e3c0269cb86d6592e0012\n1\nSK_WiFiGIGA8161_2.4G\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n607\n6\nA01\n\n\n\n2024-04-09T19:17:27.635933\nmanagement\nprobe-response\n-67\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n00333fd8244862428d22a482df516ae0315c33a83a9d32e9bf8bc2b0de978467\n1\nSK_WiFiGIGA8161_2.4G\nf0659bdd9305e4341afb9f55df7cd20a4adfd726f83a33c3857281dfa3de8575\n0\n611\n6\nA01\n\n\n\n2024-04-09T19:17:27.746452\nmanagement\nprobe-request\n-67\nd94147cf12befe41bb40dd7957733c54442de7a9d45a75ec3c747856c4bdc129\n1\nff:ff:ff:ff:ff:ff\n1\n(n/a)\nff:ff:ff:ff:ff:ff\n1\n990\n1\nA01\n\n\n\n2024-04-09T19:17:27.765945\nmanagement\nprobe-request\n-65\nd94147cf12befe41bb40dd7957733c54442de7a9d45a75ec3c747856c4bdc129\n1\nff:ff:ff:ff:ff:ff\n1\n(n/a)\nff:ff:ff:ff:ff:ff\n1\n991\n1\nA01\n\n\n\n\n\n\nAfter loading the data, remember to close the database connection:\n\ndbDisconnect(conn)"
  },
  {
    "objectID": "content/a33-preprocessing.html#filltering-techniques",
    "href": "content/a33-preprocessing.html#filltering-techniques",
    "title": "8  Preprocessing Techniques",
    "section": "8.2 Filltering Techniques",
    "text": "8.2 Filltering Techniques\nThe three filtering techniques used for WiFi data preprocessing are:\n1. Removal of random MAC addresses: Eliminates random MAC addresses to avoid duplicate counting.\n2. Removal of non-mobile devices: Removes detection records of static devices to focus on mobility.\n3. Removal of rarely detected devices: Excludes MAC addresses that are detected for very short duration.\n\n\n8.2.1 (Step 1) Removal of Random MAC Addresses\nRandom MAC addresses are identified by matching the OUI (Organizationally Unique Identifier) portion of the MAC address with a public database provided by IEEE. The OUI is the first 6 digits of a MAC address, representing the device manufacturer. Unmatched OUIs are considered random MAC addresses and are removed.\n\n\n8.2.2 (Step 2) Removal of Non-Mobile Devices\n\n\n8.2.3 (Step 3) Removal of Rarely Detected Devices"
  }
]